When would you want to use a remote repository rather than keeping all your work
local?

    Sharing with a team.   

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    If someone else is making lots of changes that are not related to you, you could spend a lot of time re-compiling and merging changes.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks create a GitHub version of some other repository for you to continue.
	Clone makes a copy from a GitHub repository in your local workspace.
	Branch creates an alternative derivation of a commit for you to work on.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It allows you to push up your changes with the system knowing if a merge is needed or if a fast forward merge is done.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Compare what you have with what is in the master directory.  There are difference tools and other repository schemes that could be used.
	Git seems somewhat logical and probably eliminates some human error compared to other methods.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    For experimentation of for a specific derivative.  Working off the master is simpler but is less easy to collaborate. 